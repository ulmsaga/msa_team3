name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'services/configserver/**'
      - 'helmcharts/configserver/**'
#
jobs:
  build:
    runs-on: self-hosted
    env:
      DOCKER_USERNAME: sclee1115
      IMAGE_NAME: group1-team3-lsc-configserver
      DOCKER_HOST: unix:///var/run/docker.sock  # Docker 호스트 설정 추가

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # QEMU 설치
      - name: Install QEMU dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user qemu-user-static
      # Docker 권한 설정
      - name: Setup Docker permissions
        run: |
          sudo chown $USER:docker /var/run/docker.sock
          sudo chmod 666 /var/run/docker.sock
      - name: Check Docker daemon
        run: |
          docker info
          docker version
      - name: Check Docker daemon
        run: |
          sudo systemctl status docker || true
          sudo systemctl start docker || true
          docker info
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: 'x64'
          cache: 'maven'

      #
      - name: Build with Maven
        run: |
          cd services/configserver
          mvn -v
          mvn clean package -DskipTests --debug

      - name: Get version
        id: get_version
        run: |
          cd services/configserver
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # - name: Build & Push Docker image
      #   run: |
      #     cd services/configserver
      #     docker build -t ${DOCKER_USERNAME}/${IMAGE_NAME}:${VERSION} .
      #     docker push ${DOCKER_USERNAME}/${IMAGE_NAME}:${VERSION}
      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./services/configserver
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Update Helm values
        run: |
          cd helmcharts/configserver
          sed -i '' "s/tag: .*$/tag: \"${VERSION}\"/" values.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add values.yaml
          git commit -m "Update image version to ${VERSION}"
          git push